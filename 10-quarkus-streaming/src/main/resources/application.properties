#
# Quarkus SmallRye Kafka connector
#
# Local Environment
%local.kafka.bootstrap.servers=localhost:9092

# Development Environment
%dev.kafka.bootstrap.servers=event-bus-kafka-bootstrap-eda-workshop.apps.labs.sandbox1862.opentlc.com:443
%dev.kafka.ssl.truststore.password=password
%dev.kafka.ssl.truststore.location=classes/truststore.jks
%dev.kafka.security.protocol=SSL

# Production Environment
kafka.bootstrap.servers=event-bus-kafka-bootstrap:9092

# Consuming data from DBZ topics: Clients
mp.messaging.incoming.dbz-enterprise-clients.connector=smallrye-kafka
mp.messaging.incoming.dbz-enterprise-clients.topic=dbserver02.enterprise.clients
mp.messaging.incoming.dbz-enterprise-clients.auto.offset.reset=earliest
mp.messaging.incoming.dbz-enterprise-clients.group.id=qrk-streaming-clients
mp.messaging.incoming.dbz-enterprise-clients.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#mp.messaging.incoming.dbz-enterprise-clients.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.dbz-enterprise-clients.value.deserializer=com.redhat.cdc.serde.ClientDBDeserializer

# Consuming data from DBZ topics: Regions
mp.messaging.incoming.dbz-enterprise-regions.connector=smallrye-kafka
mp.messaging.incoming.dbz-enterprise-regions.topic=dbserver02.enterprise.regions
mp.messaging.incoming.dbz-enterprise-regions.auto.offset.reset=earliest
mp.messaging.incoming.dbz-enterprise-regions.group.id=qrk-streaming-regions
mp.messaging.incoming.dbz-enterprise-regions.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#mp.messaging.incoming.dbz-enterprise-regions.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.dbz-enterprise-regions.value.deserializer=com.redhat.cdc.serde.RegionDBDeserializer

# Consuming data from DBZ topics: Accounts
mp.messaging.incoming.dbz-enterprise-accounts.connector=smallrye-kafka
mp.messaging.incoming.dbz-enterprise-accounts.topic=dbserver02.enterprise.accounts
mp.messaging.incoming.dbz-enterprise-accounts.auto.offset.reset=earliest
mp.messaging.incoming.dbz-enterprise-accounts.group.id=qrk-streaming-accounts
mp.messaging.incoming.dbz-enterprise-accounts.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#mp.messaging.incoming.dbz-enterprise-accounts.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.dbz-enterprise-accounts.value.deserializer=com.redhat.cdc.serde.AccountDBDeserializer

# Consuming data from DBZ topics: Movements
mp.messaging.incoming.dbz-enterprise-movements.connector=smallrye-kafka
mp.messaging.incoming.dbz-enterprise-movements.topic=dbserver02.enterprise.movements
mp.messaging.incoming.dbz-enterprise-movements.auto.offset.reset=earliest
mp.messaging.incoming.dbz-enterprise-movements.group.id=qrk-streaming-movements
mp.messaging.incoming.dbz-enterprise-movements.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#mp.messaging.incoming.dbz-enterprise-movements.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.dbz-enterprise-movements.value.deserializer=com.redhat.cdc.serde.MovementDBDeserializer

# Kafka Sink - Data Clients
mp.messaging.outgoing.data-clients.connector=smallrye-kafka
mp.messaging.outgoing.data-clients.topic=eda.data.clients
mp.messaging.outgoing.data-clients.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.data-clients.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer

# Kafka Sink - Data Accounts
mp.messaging.outgoing.data-accounts.connector=smallrye-kafka
mp.messaging.outgoing.data-accounts.topic=eda.data.accounts
mp.messaging.outgoing.data-accounts.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.data-accounts.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer

# Kafka Sink - Data Regions
mp.messaging.outgoing.data-regions.connector=smallrye-kafka
mp.messaging.outgoing.data-regions.topic=eda.data.regions
mp.messaging.outgoing.data-regions.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.data-regions.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer

# Kafka Sink - Data Movements
mp.messaging.outgoing.data-movements.connector=smallrye-kafka
mp.messaging.outgoing.data-movements.topic=eda.data.movements
mp.messaging.outgoing.data-movements.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.data-movements.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer

# Domain Region
#mp.messaging.outgoing.domain-region.connector=smallrye-kafka
#mp.messaging.outgoing.domain-region.topic=eda.domains.regions
#mp.messaging.outgoing.domain-region.key.serializer=org.apache.kafka.common.serialization.StringSerializer
#mp.messaging.outgoing.domain-region.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer

# Temporal Domain Account
#mp.messaging.outgoing.str-latest-account.connector=smallrye-kafka
#mp.messaging.outgoing.str-latest-account.topic=eda.streaming.accounts.latest
#mp.messaging.outgoing.str-latest-account.key.serializer=org.apache.kafka.common.serialization.StringSerializer
#mp.messaging.outgoing.str-latest-account.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer

##
## Quarkus Kafka Streams
##
#
## Development Environment
#%dev.quarkus.kafka-streams.bootstrap-servers=event-bus-kafka-bootstrap-eda-workshop.apps.labs.sandbox1862.opentlc.com:443
#%dev.quarkus.kafka-streams.ssl.truststore.password=password
#%dev.quarkus.kafka-streams.ssl.truststore.location=classes/truststore.jks
#%dev.quarkus.kafka-streams.security.protocol=SSL
#
## Production Environment
#quarkus.kafka-streams.bootstrap-servers=event-bus-kafka-bootstrap:9092
#
## Region and Accounts Aggregation Streams
##quarkus.kafka-streams.application-id=clients-accounts-fkjoin-aggregator
#quarkus.kafka-streams.application-id=clients-accounts-aggregator
##quarkus.kafka-streams.topics=mainframe.enterprise.clients,mainframe.enterprise.accounts
#quarkus.kafka-streams.topics=eda.data.clients,eda.data.accounts
#
### streams options
##kafka-streams.cache.max.bytes.buffering=10240
##kafka-streams.commit.interval.ms=1000
##kafka-streams.metadata.max.age.ms=500
##kafka-streams.auto.offset.reset=earliest
##kafka-streams.metrics.recording.level=DEBUG
##kafka-streams.consumer.session.timeout.ms=150
##kafka-streams.consumer.heartbeat.interval.ms=80
### Use sub-folder of embedded broker, so it gets cleaned by KafkaResource between re-runs
### This does not work for native tests, manually clean-up /tmp/kafka-streams/temperature-aggregator
##%test.kafka-streams.state.dir=target/data/kafka-data/stores
