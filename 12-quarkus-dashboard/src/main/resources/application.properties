%dev.kafka.security.protocol = SSL

%dev.kafka.ssl.truststore.location = ${PWD}/src/main/resources/keystore.jks
%dev.kafka.ssl.truststore.password = password

%dev.kafka.ssl.keystore.location = ${PWD}/src/main/resources/keystore.jks
%dev.kafka.ssl.keystore.password = password

# Kafka bootstrap servers
%dev.kafka.bootstrap.servers=${KAFKA_SERVICE_HOST}:443
%prod.kafka.bootstrap.servers=${CLUSTER_NAME:event-bus}-kafka-brokers:9092

# Aggregate metrics
%dev.mp.messaging.outgoing.generated-aggregate-metrics.connector=smallrye-kafka
%dev.mp.messaging.outgoing.generated-aggregate-metrics.topic=eda.events.aggregate-metrics
%dev.mp.messaging.outgoing.generated-aggregate-metrics.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

mp.messaging.incoming.aggregate-metrics.connector=smallrye-kafka
mp.messaging.incoming.aggregate-metrics.health-readiness-enabled=false
mp.messaging.incoming.aggregate-metrics.topic=eda.events.aggregate-metrics
mp.messaging.incoming.aggregate-metrics.value.deserializer=com.redhat.banking.eda.dashboard.infrastructure.AggregateMetricDeserializer

# Alerts
%dev.mp.messaging.outgoing.generated-alerts.connector=smallrye-kafka
%dev.mp.messaging.outgoing.generated-alerts.topic=eda.events.alerts
%dev.mp.messaging.outgoing.generated-alerts.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

mp.messaging.incoming.alerts.connector=smallrye-kafka
mp.messaging.incoming.alerts.health-readiness-enabled=false
mp.messaging.incoming.alerts.topic=eda.events.alerts
mp.messaging.incoming.alerts.value.deserializer=com.redhat.banking.eda.dashboard.infrastructure.AlertDeserializer

# Infinispan
# %dev ==> docker run -it -p 11222:11222 -e USER="developer" -e PASS="developer" infinispan/server
# %dev ==> oc port-forward -n ${PROJECT_NAME} svc/eda-infinispan 11222:11222
#%dev.quarkus.infinispan-client.server-list=localhost:11222
#%dev.quarkus.infinispan-client.server-list=${INFINISPAN_SERVICE_HOST}
%dev.quarkus.infinispan-client.server-list=eda-infinispan:11222
quarkus.infinispan-client.server-list=eda-infinispan:11222
quarkus.infinispan-client.auth-username=developer
quarkus.infinispan-client.auth-password=developer
quarkus.infinispan-client.auth-server-name=infinispan
quarkus.infinispan-client.auth-realm=default
quarkus.infinispan-client.client-intelligence=BASIC

# Kubernetes Client
quarkus.kubernetes-client.trust-certs=true
quarkus.kubernetes-client.namespace=${PROJECT_NAME:eda-workshop}

# Generate OpenShift descriptors
quarkus.kubernetes.deployment-target=openshift

#
# OpenShift
#

# Expose the service when deployed
quarkus.openshift.expose=true

# Recommended labels and a custom label for kubernetes and openshift
quarkus.openshift.part-of=eda-workshop
quarkus.openshift.name=dashboard
quarkus.openshift.labels.eda=backend
quarkus.openshift.labels.department=user-experience

# Custom annotations
quarkus.openshift.annotations."app.openshift.io/connects-to"=eda-infinispan

# CORS
quarkus.http.cors=true
