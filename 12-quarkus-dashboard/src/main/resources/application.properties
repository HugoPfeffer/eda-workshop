%dev.dummy.generator=on
dummy.generator=off

#
# Quarkus Properties
#
%dev.quarkus.http.port=8110

# CORS
quarkus.http.cors=true

# Enable logging
quarkus.log.console.enable=true
quarkus.log.console.level=DEBUG

# Log level settings
quarkus.log.category."com.redhat.banking.eda.dashboard".level=DEBUG
quarkus.log.category."jdk.internal.net.http".level=DEBUG

# Kafka
# Kafka bootstrap servers
%dev.kafka.bootstrap.servers=localhost:9092
%test.kafka.bootstrap.servers=localhost:9092
kafka.bootstrap.servers=event-bus-kafka-brokers:9092

# Apicurio Registry
%dev.mp.messaging.connector.smallrye-kafka.apicurio.registry.url=http://localhost:8080/apis/registry/v2
mp.messaging.connector.smallrye-kafka.apicurio.registry.url=http://eda-registry-service:8080/apis/registry/v2

# Aggregate metrics Generator
%dev.mp.messaging.outgoing.generated-aggregate-metrics.connector=smallrye-kafka
%dev.mp.messaging.outgoing.generated-aggregate-metrics.topic=eda.events.aggregate-metrics
%dev.mp.messaging.outgoing.generated-aggregate-metrics.acks=all
%dev.mp.messaging.outgoing.generated-aggregate-metrics.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
%dev.mp.messaging.outgoing.generated-aggregate-metrics.value.serializer=io.apicurio.registry.serde.avro.AvroKafkaSerializer
# Apicurio Properties
%dev.mp.messaging.outgoing.generated-aggregate-metrics.apicurio.registry.headers.enabled=true
%dev.mp.messaging.outgoing.generated-aggregate-metrics.apicurio.registry.auto-register=false
%dev.mp.messaging.outgoing.generated-aggregate-metrics.apicurio.registry.avro.encoding=JSON
%dev.mp.messaging.outgoing.generated-aggregate-metrics.apicurio.registry.avro-datum-provider=io.apicurio.registry.serde.avro.ReflectAvroDatumProvider
%dev.mp.messaging.outgoing.generated-aggregate-metrics.apicurio.registry.artifact-resolver-strategy=io.apicurio.registry.serde.avro.strategy.RecordIdStrategy

# Aggregate Metrics Consumer
mp.messaging.incoming.aggregate-metrics.connector=smallrye-kafka
mp.messaging.incoming.aggregate-metrics.health-readiness-enabled=false
mp.messaging.incoming.aggregate-metrics.topic=eda.events.aggregate-metrics
mp.messaging.incoming.aggregate-metrics.auto.offset.reset=latest
%dev.mp.messaging.incoming.aggregate-metrics.group.id=qrk-dashboard-dev
mp.messaging.incoming.aggregate-metrics.group.id=qrk-dashboard
mp.messaging.incoming.aggregate-metrics.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
mp.messaging.incoming.aggregate-metrics.value.deserializer=io.apicurio.registry.serde.avro.AvroKafkaDeserializer
# Apicurio Properties
mp.messaging.incoming.aggregate-metrics.apicurio.registry.avro-datum-provider=io.apicurio.registry.serde.avro.ReflectAvroDatumProvider
#mp.messaging.incoming.aggregate-metrics.apicurio.registry.use-specific-avro-reader=true

# Alerts Generator
%dev.mp.messaging.outgoing.generated-alerts.connector=smallrye-kafka
%dev.mp.messaging.outgoing.generated-alerts.topic=eda.events.alerts
%dev.mp.messaging.outgoing.generated-alerts.acks=all
%dev.mp.messaging.outgoing.generated-alerts.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
%dev.mp.messaging.outgoing.generated-alerts.value.serializer=io.apicurio.registry.serde.avro.AvroKafkaSerializer
# Apicurio Properties
%dev.mp.messaging.outgoing.generated-alerts.apicurio.registry.headers.enabled=true
%dev.mp.messaging.outgoing.generated-alerts.apicurio.registry.auto-register=false
%dev.mp.messaging.outgoing.generated-alerts.apicurio.registry.avro.encoding=JSON
%dev.mp.messaging.outgoing.generated-alerts.apicurio.registry.avro-datum-provider=io.apicurio.registry.serde.avro.ReflectAvroDatumProvider
%dev.mp.messaging.outgoing.generated-alerts.apicurio.registry.artifact-resolver-strategy=io.apicurio.registry.serde.avro.strategy.RecordIdStrategy

# Alerts Consumer
mp.messaging.incoming.alerts.connector=smallrye-kafka
mp.messaging.incoming.alerts.health-readiness-enabled=false
mp.messaging.incoming.alerts.topic=eda.events.alerts
mp.messaging.incoming.alerts.auto.offset.reset=latest
%dev.mp.messaging.incoming.alerts.group.id=qrk-dashboard-dev
mp.messaging.incoming.alerts.group.id=qrk-dashboard
mp.messaging.incoming.alerts.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
mp.messaging.incoming.alerts.value.deserializer=io.apicurio.registry.serde.avro.AvroKafkaDeserializer
# Apicurio Properties
mp.messaging.incoming.alerts.apicurio.registry.avro-datum-provider=io.apicurio.registry.serde.avro.ReflectAvroDatumProvider
#mp.messaging.incoming.alerts.apicurio.registry.use-specific-avro-reader=true

#
# Infinispan
#
%dev.quarkus.infinispan-client.server-list=localhost:11222
%dev.quarkus.infinispan-client.auth-server-name=infinispan
%dev.quarkus.infinispan-client.auth-realm=default
%dev.quarkus.infinispan-client.auth-username=local
%dev.quarkus.infinispan-client.auth-password=password

%test.quarkus.infinispan-client.server-list=localhost:11222
%test.quarkus.infinispan-client.auth-server-name=infinispan
%test.quarkus.infinispan-client.auth-realm=default
%test.quarkus.infinispan-client.auth-username=Testing User
%test.quarkus.infinispan-client.auth-password=Password
%test.quarkus.infinispan-client.sasl-mechanism=DIGEST-MD5

quarkus.infinispan-client.server-list=eda-infinispan:11222
quarkus.infinispan-client.auth-username=developer
quarkus.infinispan-client.auth-password=developer
quarkus.infinispan-client.auth-server-name=infinispan
quarkus.infinispan-client.auth-realm=default
quarkus.infinispan-client.client-intelligence=BASIC
quarkus.infinispan-client.near-cache-max-entries=1000

#
# Kubernetes Client
#
quarkus.kubernetes-client.trust-certs=true
quarkus.kubernetes-client.namespace=${PROJECT_NAME:eda-workshop}

# Generate OpenShift descriptors
quarkus.kubernetes.deployment-target=openshift

#
# OpenShift
#

# Expose the service when deployed
quarkus.openshift.expose=true

# Recommended labels and a custom label for kubernetes and openshift
quarkus.openshift.part-of=eda-workshop
quarkus.openshift.name=dashboard
quarkus.openshift.labels.eda=backend
quarkus.openshift.labels.department=user-experience

# Custom annotations
quarkus.openshift.annotations."app.openshift.io/connects-to"=eda-infinispan

# Resources
quarkus.openshift.resources.requests.cpu=500m
quarkus.openshift.resources.requests.memory=1Gi
quarkus.openshift.resources.limits.cpu=2
quarkus.openshift.resources.limits.memory=2Gi
